let input = [["Tile 3041:", "#..##.#...", "..#....###", ".#..#.#.##", "..#.......", "#.#..###.#", ".#....#..#", ".........#", "#...##.###", "#.....###.", "...##..#.."], ["Tile 1747:", "##..######", "#####...##", "..#.....##", "#...##.###", "#........#", "###.#..#.#", "#.##...#..", "#..#.....#", "#.#..#...#", "#.#.#..###"], ["Tile 2887:", "##....#..#", "##....#...", "#...#..#..", "...###.#..", ".....#.##.", ".....#....", "##.##....#", "#.......#.", "###....##.", "##..##.#.#"], ["Tile 3001:", "##.#.#.#..", "##...####.", "##....#.##", "....##....", ".......##.", "#..#..#...", "###..#.#.#", "###....###", "####...###", "##..##.#.#"], ["Tile 2267:", "##.#.#.###", "##....#..#", "#..#....#.", "..#.##..#.", "##..#..#..", "...#......", "#.#.#.....", "##........", "...#.#..##", "..##.#..#."], ["Tile 2797:", "#.##.#...#", ".......#..", "#....#....", "##..##.#.#", "#......##.", ".#.##.#.##", "#......##.", "####....#.", "#.##....#.", "####.#.###"], ["Tile 1087:", "#.#######.", "##..##..#.", "#.......##", ".....#....", "##...#...#", "#....#...#", ".##......#", ".#..#.#..#", "#...#..##.", ".##..##.##"], ["Tile 2237:", ".#..####..", "...####.##", "##...#..#.", "#..#.#...#", "##.#......", ".##.#..#.#", ".#..##...#", "...#....##", ".....##...", ".....##..#"], ["Tile 3673:", "##.###...#", "#.##..#..#", "#..####...", ".#.####...", ".....#.#.#", "#..#..#...", "###.......", "#.#.......", "#.......#.", "##..###..#"], ["Tile 1907:", "...#.#.###", "#.##.....#", ".......##.", ".##.#...#.", "..#.##....", "##..##....", "#.........", "##.#......", ".......#..", "#.#.###..."], ["Tile 2437:", "#.##.##..#", "....#.....", "..#......#", "#...#.....", "...#......", ".....#...#", "#.#.......", ".#...#...#", "#.#....#..", ".##..##..."], ["Tile 2897:", "##..#...#.", "..###....#", "...#.##...", "....#.##..", "...##.....", "#..#..#.##", "..###.....", "...##..##.", "#..#......", "#.#.##..#."], ["Tile 1103:", ".####.#..#", "..##...#..", "#.....#...", "##.#.....#", "#.##......", ".##...#..#", "##.....#.#", "##.....###", "#.....#...", "##.#...##."], ["Tile 1559:", "...##..#.#", "#..###...#", "...##...##", "#..#.#.#..", "#......#.#", "#..#.#.#.#", ".#..#....#", "....#..###", "..##..##..", ".#..##..##"], ["Tile 3931:", "##....##.#", ".##..#...#", ".......#..", "#....#.#..", "#.#..##.#.", ".##.####..", ".......#.#", ".....#.#..", ".#.#......", "####..#.##"], ["Tile 3331:", "#.#.####..", ".#.##...##", "....####.#", ".##......#", "#.##.##..#", "##..#...#.", "#.##....#.", "#.#.#.#.#.", "...#......", "###.##.##."], ["Tile 2089:", "..########", "##.#...##.", "#...#.....", "##......##", "##..##..#.", "..#.#....#", "#..##....#", "#..#.#...#", "##..#....#", "..######.#"], ["Tile 1069:", ".####..###", "......##..", "....#.##.#", "#..#.....#", "#...#...#.", "#...#.##.#", "...#.#...#", "#.#.......", "#.#.##.#.#", "#..#.#.#.."], ["Tile 1831:", "#..#..##..", "#...##...#", "..##...#.#", "#.......##", "#........#", "..#.......", "##..###..#", "#....###.#", "...#......", "##..#....."], ["Tile 1453:", ".#.#.#..##", "##.##...##", "#....#....", "#..#..#.#.", "##.#..###.", "...##.##..", "....##..##", "...##..###", "##........", "..##.#####"], ["Tile 3767:", "..#.#.#.#.", "..........", "#....#.#.#", "#.....#..#", "##..#..#..", "...#..#..#", "..#....#..", "......#...", "#..##.....", ".#....##.#"], ["Tile 1693:", "#.###..###", "#...#...##", "#......###", "#....#...#", "......#..#", "###...#...", "####..##..", "...#..#...", "##..##.###", "#....#.##."], ["Tile 3631:", "....#.##..", "..#...#...", "#.###..#..", "....#.#..#", "#..#..##..", "#....#.#..", "#.##..#...", "#........#", ".....#...#", "...#......"], ["Tile 2999:", "#...###..#", "#.#.##....", "#.........", "##.......#", "#.#.##.###", ".....##.##", ".#.##..##.", "#...###.##", ".#.....#..", "..#.#.###."], ["Tile 2417:", "..#.#.#...", "##.#..#.##", "#.##....#.", "#.........", "...#..#...", ".#...#.###", ".#.###...#", "#........#", "#.#..#....", "#.##.#...#"], ["Tile 3919:", "##........", "#.#.......", ".#.#.#....", "...#...#.#", "...#...##.", "##.....###", "#.#.#.#...", "###.#.....", ".#.#..#.##", "##.#...##."], ["Tile 3557:", "##.#.###..", ".##...#..#", ".#.#...#..", "....###...", ".....#####", "###.#....#", ".#..##..#.", "#..#....#.", "..........", "....###.#."], ["Tile 3851:", ".##.###.##", "..#......#", "......#..#", "#.#.......", "......##..", "##...#....", "..#..#...#", "...#.#....", ".........#", ".#.##..###"], ["Tile 1013:", "##.##.##..", "##........", "...#......", "#.....#...", "#.#..#...#", ".#......##", "...##.#.##", "..#..##..#", ".#...#..#.", "..#..###.#"], ["Tile 1549:", "..#...##.#", "..#......#", "##....#.#.", ".......##.", "..#...#..#", "#.#..#..##", ".......#.#", ".......#.#", "#...##...#", ".######..."], ["Tile 2179:", ".##.##.#..", ".##.###...", ".........#", "..#..#..#.", "..#####...", "...#..#..#", "...#....##", "#........#", "#.........", "###.###..."], ["Tile 1697:", "###..###.#", "##...#....", "####...#.#", ".#.....##.", "....####.#", "#....##.##", "..#.##...#", ".........#", "###..##.##", "#..##.####"], ["Tile 1307:", "##......#.", "..........", "....#....#", "#...#.#.#.", ".###.....#", "#..##.#..#", "..........", ".....##.#.", "...####..#", "..#..#.#.."], ["Tile 3929:", "###.#.##..", "##........", "###....###", "...#..#..#", "...#.....#", "..#.###...", "..........", ".....#...#", "#.......##", "##....#.#."], ["Tile 1949:", "..####.#.#", ".#..#...#.", "#..#....##", "#.....###.", ".........#", "..#..#...#", ".....##...", ".....#....", ".#.#.#.#..", "####.#####"], ["Tile 2081:", "##.##.####", ".#........", "#...#.....", ".#.##..#.#", "....###..#", "..#..#.#..", "#.#.#.##.#", "..#..#..#.", "#...#.#...", ".##.#.####"], ["Tile 1433:", "#####.##..", "#.....#...", "####..#...", "...####...", "......#.##", "..##...#..", "#...#.#.#.", "#....#..#.", "#......#.#", "##..###..#"], ["Tile 3433:", "#.......##", "#....#....", "#...#.#..#", "..#.##...#", "#...##.#.#", "##.####..#", "..##.###.#", "#.#....#..", "##.#.....#", ".#....#..#"], ["Tile 3607:", "##.#.#.#.#", "...#..#.#.", "#.#..#.#..", "#.......##", "..#..##...", "#.....#...", "#...#..#.#", "...#....##", "#..#..#.##", "##.#..#.#."], ["Tile 2677:", ".###..#..#", "###......#", "..........", "##..#...#.", "##...#.#..", "..#.......", "#...#...#.", "#......#.#", "##.#.#.#.#", "###...#..."], ["Tile 3461:", "...##...##", "#.#...##.#", "#.....##..", "#..#....##", "#.#....#.#", "..##.##.#.", "#.........", "..#.#....#", "#....##...", ".#.##.####"], ["Tile 3911:", "#.#####.##", "#..#.....#", "#..#......", ".##....##.", "#..#..#..#", ".....#.#.#", "#.......##", "......#...", "####...##.", "..#..#.#.."], ["Tile 2729:", "##..##.##.", ".#..#...#.", "#....###..", ".....##...", "#..#..#..#", "....###..#", "#....##.##", "#..#.###..", "#.....#...", "...##.#..."], ["Tile 2549:", ".#.##.#...", "#..#.#.#.#", ".........#", ".#..##..##", "#....##...", "##..#.##.#", ".#...##...", "#...#.....", "..#.......", "#....#...."], ["Tile 1699:", ".######..#", "....###..#", ".####..#..", "#....#....", ".##.#...#.", "#.......#.", ".#.#.##..#", "#..#......", "..........", "#.##..##.."], ["Tile 2221:", "#...##.#..", "....#....#", "#...#....#", "#........#", "#.......##", "##.#..#...", "#.#.###..#", "#..#.....#", "......#.##", "..#.####.#"], ["Tile 2129:", "....#####.", ".##..#...#", "......#.##", "#.#...#...", "#..#...###", "###.#..#..", ".....#...#", "...#......", "#...#.#...", "#.###.###."], ["Tile 1973:", ".......###", "..........", "#.#.#.....", ".........#", "....#..#..", "...#...#..", "##.....#.#", "#..#...#.#", "#.#......#", "#...#.#.##"], ["Tile 3943:", "...###....", "........##", ".##.......", "##.#....##", "..#.#..#..", "..##...#..", "#.##....#.", ".#####.#..", "###..##.#.", "...#..#.##"], ["Tile 1451:", "#..###..#.", "#..#....##", "....#...##", "##.......#", "#.........", "..........", "...#...#..", "..#....##.", "...#..#.#.", ".##...##.#"], ["Tile 1759:", ".#..##...#", "##........", "##..#.....", "..........", ".###...###", "..##..#..#", ".......###", "#..#..#..#", ".##....#..", "...##.#..#"], ["Tile 2963:", "##.##.#.#.", "....#.....", "#.....##.#", ".##.#..#.#", ".###..#.#.", "#.##.##...", "....#....#", "#.....#...", ".#.##.###.", ".#..#....."], ["Tile 3313:", "#.#...#...", "..##..#..#", "#####.##.#", "#.....##.#", "..#..##..#", "##.###....", "...#.#....", ".......#.#", "##.....##.", "#.#.#####."], ["Tile 3221:", ".#...##...", "#.##...###", "####...##.", ".##.......", "##..#...#.", "...#.#.###", "#...##..#.", "##...#..#.", "#.#...##..", "##...#.##."], ["Tile 3989:", "###...#.##", "#.......##", "#.......#.", "#...#....#", "#.........", "...#.##...", "..#....#..", "..........", ".#......#.", "#.##.###.."], ["Tile 2069:", "#..#..##.#", "#.####....", "#..#......", "#..##..#.#", "#......###", "#...#.....", "#...#..###", "......##..", "#..#.####.", "#.#..#..#."], ["Tile 1871:", "#.##..####", ".#.##....#", "###.#.#..#", "#....#...#", "......#.##", "#.....####", "#.....##.#", "#...#....#", "....#.....", ".......#.#"], ["Tile 2083:", ".#.##.#...", "#..####..#", "##.#.##.##", "..#.##....", "#.#..##...", "..#.#..#..", "...#..#...", ".#..#.##..", "###..#.###", "#...#.#..."], ["Tile 2309:", ".##.#...#.", "#..##..#.#", "...#......", ".#..#.....", "#..##...##", ".#...#...#", "...#.#....", ".....##...", "#.##....##", "...##..###"], ["Tile 3413:", ".....####.", "..#.###...", "..#.#....#", "##.##.....", "..##...###", "##..#.....", "##.#.....#", "###.######", "#..##.....", "#.#...#.#."], ["Tile 1039:", "#.##.#.#..", "#...#.#...", "...####.#.", "..#..#.#.#", "...#.##..#", "#...###..#", "....#..#..", "##....##.#", ".#...#....", "#...#.#..#"], ["Tile 2029:", "##..##.#..", "#.........", "#..#......", ".##.......", ".....#..#.", ".##..##...", "......#...", "#....#.#.#", "..##.#....", "...#.#.#.."], ["Tile 2281:", "######.##.", "#...##....", "......#.#.", "##..#.##..", "#..####.##", "#....#.#.#", "#........#", "........##", ".##....##.", "..###....."], ["Tile 3259:", "#...##.#.#", "...#....#.", "..#.#...#.", "###.......", ".####.#.##", "#..#...#.#", "#....#.##.", "#..###..#.", "#.###..#.#", "#.#...###."], 
["Tile 2087:", "###.###.#.", "#.........", "#.......#.", "##....####", "#.##...#..", "#..##.#.##", ".##...#...", ".##..#..#.", "#.....#...", "##..#.#..."], ["Tile 3391:", ".##.#.#..#", "##.#.#...#", "#..#......", "...#......", "#..#......", "..........", "...###...#", ".........#", "##..#....#", "..#.#....#"], ["Tile 2693:", "#...#.##..", "#..##....#", ".#.#....#.", "#.#.#...#.", "#.##.....#", "...#......", "..#.#.##.#", "#.......#.", "...#.....#", "..###..##."], ["Tile 1279:", "#.#.....##", ".........#", "#.#..#.#.#", "#..#.....#", "#..#......", "###.....##", ".###...#.#", "#.##.....#", "#.##......", ".#..####.."], ["Tile 2459:", "####...#.#", "#.#....#.#", "#........#", ".#........", "##......#.", "#...#.#..#", "###....#..", "..##.##..#", "#.#.....##", "#.#.#....."], ["Tile 2297:", ".##.####..", "#...#...##", "##........", ".##...#.#.", ".....#.#.#", "#........#", "......#.#.", "#...#...##", "#.#.....##", ".##..##..#"], ["Tile 3217:", ".##..##..#", "#...#.#...", ".#.##.#...", "##.##....#", "#...##..##", "..###...#.", ".........#", "#..#.#....", ".#..#...##", "#....##..#"], ["Tile 2467:", "#.#.##.###", ".....#...#", ".#........", "#...##.###", ".#.......#", "#...#.##.#", "#....#....", "#...#....#", "...##.##.#", "....#..#.#"], ["Tile 2939:", "##.###.#..", "...#..#..#", ".#..##....", "#.#.......", "##....#...", ".##...##..", "##.#.....#", "#..#..#.##", "..........", "###..##.##"], ["Tile 1459:", "#.#.##.###", "..##.#...#", "#..#.#.##.", "#....###..", "##...#...#", ".##.#.....", ".##.#.##..", "#.....#..#", "#.#.##....", "..#....##."], ["Tile 3583:", ".#..#.#.##", "#..###.#.#", ".#....#...", ".#.##....#", "...#.....#", "...#.#...#", "....###...", ".....#....", "..#.......", ".#.#.###.."], ["Tile 3209:", "#.#.######", ".#....#.#.", "..#.......", "#.#.....##", "#..#.....#", ".#.......#", "#.##.#....", "....##....", ".#.##.#.#.", "#...#.#..."], ["Tile 1471:", "#.###..##.", "........##", ".#....##..", "####.#...#", "...#......", "#....#....", "#.....#.#.", "#.#......#", "##.#.##..#", ".#.#.###.#"], ["Tile 3533:", "....#..#.#", "###...#...", "..#.#..#..", "...#..#...", "#.#.#..#.#", ".#..##..#.", "#..#.....#", ".....#.#.#", "........##", "..#.#.##.#"], ["Tile 2389:", ".....##...", "..#....#.#", "....#...#.", "#.....#...", "#..#....##", "#.#.#.....", "#........#", "#.........", "....#.#...", "....##..##"], ["Tile 3023:", "....#.###.", "#...#.#.##", "#.#.#.....", "#..#.#..##", "....#....#", "....######", "#...#.....", ".#....#.##", "#......#..", "#.##...##."], ["Tile 1367:", ".#...###..", "#...##.##.", ".#.....#.#", ".#...#...#", "####.#....", ".##.......", ".#.....#..", "...#.....#", "..#......#", "###..#..#."], ["Tile 1789:", ".##..#..##", "....#.##..", ".####.....", "#...###..#", "#..#..###.", ".##.#.....", "..#.##....", ".....#....", ".......#..", ".#..##...."], ["Tile 3011:", "#.###..#.#", ".....#...#", "...#..#..#", "#.###..#..", "#..#.#..##", "..##......", ".#...#...#", "...#..#...", ".#.###...#", ".#.##....."], ["Tile 3547:", ".###.#...#", ".##....#..", "...#.##.##", "#.#.......", ".......#.#", "......#..#", "#..#...#..", "...#.####.", "#....##.#.", "....#.##.."], ["Tile 3671:", "##.#..#.#.", "##..##.#.#", "...###....", "#.#.###..#", "#..#...#..", "..#......#", "#.#...####", ".....#...#", ".#...##..#", "..###..#.."], ["Tile 3529:", "#.#.#..#.#", "##.....#..", ".##..#....", "#.#....###", "#.##.#..##", "#....#.#.#", ".....###.#", "....#..#.#", ".#..#....#", ".###..##.."], ["Tile 2251:", ".####.#.##", "#.....#...", ".#...#.#.#", "...##.....", "##.......#", ".....#....", "...##....#", "#..#..#...", "#########.", "#........."], ["Tile 2927:", ".#...#####", ".###..#...", "...#...#..", "##.#...##.", "...#.....#", "#.###...##", ".....#..#.", "#....###.#", "#........#", ".##..##..."], ["Tile 3467:", "#...#.#.##", ".....#....", "...###..##", "#...#.#...", "...#.#.#..", "....#.....", ".....#.#..", "..#.#...#.", ".....##...", "#..#..#..."], ["Tile 2341:", "#.......##", "..##..#.#.", ".....##..#", "#..###.#..", "...##.....", "##..#..#.#", "###..#.#.#", ".#..#..###", "...#..##..", ".#.#...###"], ["Tile 1847:", "#..##..###", "#....#.#.#", ".#..###...", "#....#...#", "#.#..##..#", "##.####...", "#.#.......", "..........", ".#..#...##", "##..#..##."], ["Tile 1597:", "#.#.#....#", "#......###", ".#..#....#", ".#....####", "#.#..#..##", "#...#..#.#", "#.##.##..#", "###...#...", "#..##.#...", ".###..#.#."], ["Tile 2789:", ".#####.#..", "....#.....", ".........#", "#.##....#.", "..#.#.#...", "#...##....", "#..#...#.#", "#..#.....#", ".....#....", ".#..####.#"], ["Tile 2441:", "##.#.#....", "#.#.......", ".#...###..", "..#....##.", ".......#.#", ".......#..", ".#...##..#", "####......", "##..#....#", "##.##.###."], ["Tile 1303:", ".##...#...", "#........#", "###....#.#", ".....#....", ".....#....", "#.....#..#", ".........#", ".####.#..#", "..##...###", "####..###."], ["Tile 2339:", "..#..##.##", "...#....##", "##.#.#....", "#..##.##.#", ".####..#.#", "#.........", ".#...#..#.", "......#..#", "#..###...#", ".##..#.#.#"], ["Tile 3079:", "####...#.#", "...###..##", ".........#", ".##....#..", "##..#..#..", "...#..##.#", "#.#....#..", "##........", "#.#.####..", "###.#.#..#"], ["Tile 1877:", "..#.#.#..#", "#.#.#.#...", "#....##...", "..##.#..##", "##.#..#...", "#..#......", "#...#.#..#", ".....###.#", "..#..##..#", "########.#"], ["Tile 2663:", "##.##....#", "#......##.", "#.#...#..#", "##.###....", "##..#.#.##", "#...#..#..", "#..#....#.", "..#.#...##", "#..##...##", ".....###.#"], ["Tile 1109:", "###....##.", "#........#", "#.........", "...#..####", "..##..##.#", ".....##..#", ".#...#.#.#", "#...#...##", "..........", "...#.#.###"], ["Tile 2971:", "...##.####", "#..#....##", "#...#.#.#.", "#...#.##.#", "...#.....#", ".#........", "#.....#.#.", ".#####.#.#", "##..#...#.", "###.#..#.#"], ["Tile 2053:", ".###.###..", "####.#..##", "..#...##..", "##....##.#", "#.#..#.###", "..#.......", ".#.##...#.", "#...##..##", "..#...#..#", "#.#....###"], ["Tile 2647:", ".###.#.###", "#........#", "#....#..##", "........#.", "##....##.#", "##....##..", "....#..#.#", "...#.....#", "##.......#", "##.#...#.#"], ["Tile 1423:", "####.#....", "#.....#...", "#.#....#.#", "...#.....#", "..#.......", "#.#.......", "##..#....#", "##.##.#...", "#...#.....", "...#.##.##"], ["Tile 2767:", "..#.##..##", "#...#..#.#", "#.#....#..", "#.......#.", ".......#..", ".#...#.#.#", ".##.#..#..", ".....##..#", "#.......##", "##....####"], ["Tile 2203:", ".#...##.##", "#.##...#.#", ".#........", "...#.##..#", "###....###", ".#.....#.#", "#.#.##...#", "...#.#.#..", ".....#....", "#.####.##."], ["Tile 1667:", "....#.##.#", "#..#...#..", ".#...#...#", ".#........", ".#........", "...#.....#", "..#..#...#", "##...####.", ".#.....#..", "#..#......"], ["Tile 2633:", ".#.#######", "#..###....", "........#.", "#.........", ".....##.#.", "#.#......#", "#.#.......", "..##.....#", "....##....", ".#..####.#"], ["Tile 3539:", "####.##..#", "..##....#.", "..#.#.##.#", "...#.....#", "#.........", ".......#.#", "...#....#.", "###..####.", ".##......#", "..#..#####"], ["Tile 2381:", ".######...", "##..###...", "#......#.#", "........##", ".#.....#.#", "##..##...#", ".#.......#", "#.........", "...##....#", "....##...#"], ["Tile 1153:", "..##.##..#", ".....##.#.", ".....##...", "..#.....##", "##.#..#...", "#.....#..#", "#....#..#.", "#....#.#..", "..#..#..#.", ".#.##....."], ["Tile 2011:", "#.##..#...", "#.##.....#", "...#..#...", "###.......", "#....#..#.", "..##......", "##..#..#..", "..##....##", "#..#..#...", "##.####..#"], ["Tile 2731:", "........#.", "#........#", "##.#.....#", "#.....##..", "#.....#...", "#.#......#", "...#.###.#", "#.#.#....#", ".#.#...#.#", "#...###..#"], ["Tile 3643:", ".#...#.###", "..#...#..#", "#....##..#", "...##.#.#.", ".#.....#..", "...#.##..#", ".####.##..", "#..#..####", "....#....#", "####.####."], ["Tile 2917:", "..########", "#......#.#", "#..#.#..##", "#...#...##", "#..##....#", "...#..#...", "..#......#", "...#...#.#", "#.....#..#", ".#.#..####"], ["Tile 1951:", "#.#.#..##.", "..........", "..#.#.#.##", "#.#.......", ".#..#...##", "...##..#.#", "#...#..#..", ".#..#.....", "#.#.....##", ".#####...."], ["Tile 2593:", "..#####.#.", ".#...#....", "##..###..#", "###.##..##", ".#....##.#", ".#..##....", "#.#..#..##", ".....#....", ".....#...#", ".####..#.."], ["Tile 2953:", "..#..#.#.#", "...#..#...", "##.....#.#", "......#..#", "#........#", "..#..#...#", "#.........", "###.#.##..", "##..#..#..", ".###.#..#."], ["Tile 3769:", "......#...", ".#.##.#...", ".##......#", "##........", "#.....###.", "....#...#.", "..........", "#.....#.##", "..........", ".##..##.##"], ["Tile 2423:", "####..#.##", ".#..##....", "#.#.#.....", ".........#", "..........", "..#..#....", ".#.#..#..#", "#.........", "#..#..#...", "##.#......"], ["Tile 3329:", "..#####.#.", ".#....##.#", "###..#####", "##...#...#", "#.........", "#.........", "...#.#...#", "....#...##", "#...#.#...", "#........."], ["Tile 1249:", "..#..###.#", "......#.#.", "##...#....", "..........", "##.......#", "#......#.#", "#..#.#..##", ".#.......#", "###....#.#", ".##.....#."], ["Tile 3343:", "##..#...#.", "##.#..####", "........#.", "...#......", "......#...", "#.....#...", ".#.#.#....", "......##.#", "..#.##...#", ".#.#..####"], ["Tile 2017:", "##.##.#.##", "...#......", ".....##.#.", "..#...#...", "#.#....#..", "#....#...#", "#....#...#", "#...##....", ".....#.#.#", "....#.#.#."], ["Tile 1151:", "##..##....", "..##.....#", "#.####.##.", "...##....#", "..##.....#", "....#....#", ".#.##...##", "......#..#", "#..#.#.#..", "#.###...##"], ["Tile 3697:", "###.....#.", "..##...##.", "......#.#.", ".#...#.#.#", ".#...#...#", ".#.....#..", "#...#.#...", "#..#....#.", ".#..##...#", "..#.#.##.."], ["Tile 1487:", "..#####.##", "#.........", "#.#...#.##", "##.##.....", ".##.#....#", "..#....###", "#.........", "..#.......", "#.##..#...", ".####..##."], ["Tile 1481:", "..#..#..##", "#.#..#.##.", "#..##....#", "##.....#..", ".#...##.##", ".#......#.", "..#..##...", "###...###.", "..#...##..", "#...##.#.."], 
["Tile 2903:", "#..#...###", "#..#####.#", "..#.......", "###..###..", ".#........", "#.#.#....#", "..#..#.###", "##..#.##..", "...#......", ".##.##.#.."], ["Tile 1171:", ".###..####", "....#..#..", "....#..#.#", "#.....##.#", "##...##...", "#..#.##.#.", "##..##...#", "#..##.#.#.", "#.#..##.#.", "##.##....#"], ["Tile 2621:", "#...###.##", ".#.....##.", ".#..#...#.", "...#..#.##", ".#..##..#.", "##..#..##.", "...##...#.", ".#..#...##", "....#....#", "...##.####"], ["Tile 2671:", "...#####..", "........##", "#....##..#", "##........", "##..##.#..", "..#.....#.", "#.........", "..##.....#", "##....#.##", "###.#...##"], ["Tile 2357:", ".##.##....", "#...#....#", "...##..#.#", "#.##...#..", "##.###..##", "..#..#####", "...#.###.#", "...##....#", "..#.####.#", "#..##..###"], ["Tile 3617:", "...##.#...", "#####..#.#", "....#....#", "......#..#", "#...#.....", "...##....#", "....#.....", "#..#...##.", "#...#...#.", "....##...#"], ["Tile 3517:", "#.#..#..#.", "#......#.#", ".#.#..#.##", "...##...#.", "#.##..##..", "...#..#.##", "#...#.##..", ".#..#..#.#", "....#...##", "..###.###."], ["Tile 1499:", ".#..#....#", "...#.##..#", "#...#..#..", "..##...#..", "#....#.#.#", "#..#.#..##", "##.##..#.#", ".##.#..#.#", "#.###..##.", "##.##.#.#."], ["Tile 3581:", "###.#.###.", ".#..#....#", "###....##.", "..#.#...##", "##..#..#..", ".....##...", "........#.", ".#.....##.", "#.#...##..", "###.#.#..#"], ["Tile 2687:", ".#####...#", ".......#..", ".#..#....#", "...#......", "##....#..#", "#.#..#..#.", "##..#.#.#.", "..#....###", ".#........", "#...#..#.."], ["Tile 1657:", "...#...#.#", ".#.##.#..#", "....#...#.", "...##.##..", "....#.#.##", "#..#..#.#.", "...#.#.#..", "...##....#", "#...#.#..#", ".##.##...#"], ["Tile 3449:", "#.....###.", "#..#.....#", "#......##.", "....#.....", "##....#...", ".....#...#", "..........", "#......###", ".#....#...", "###...#..."], ["Tile 3797:", "#.#######.", "..#.##.###", "...#.#...#", "##.##.##.#", "#.......#.", ".#......##", "##...#####", "..#.##.###", "#.#.##...#", "##..#.#.#."], ["Tile 1511:", "#.###.###.", ".##.#....#", "........##", "##..#..#..", "..#####.##", ".....#....", ".......#..", "...#......", "##........", "...#.#####"], ["Tile 2311:", "..#.####..", "......#..#", ".###..#.#.", "##..#.###.", "...#...#..", ".......###", "##.#......", ".####...##", "##.##..###", "#...#..###"], ["Tile 1123:", ".##.##....", "#....##...", "#..#.....#", "#........#", "....#.....", "#...##.#.#", "#.#.##..##", "...#...##.", "#..#...#..", "##.#.#.###"]]
let sides = []
let image = []

// while creating image keep track of next to check
let nextcolumn // right side of top tile
let next // bottom side (or right side for next column)

function start() {
    // take id and sides
    for (let i = 0; i < input.length; i++) {
        let id = input[i][0].substring(5, input[i][0].length-1)
        let top = input[i][1]
        let bottom = input[i][input[i].length-1]
        let left = ""
        let right = ""
        for (let j = 1; j < input[i].length; j++) {
            left += input[i][j].substring(0, 1)
            right += input[i][j].substring(input[i][j].length-1)
        }
        sides.push([id, top, bottom, left, right])
    }

    // search tiles where 2 sides don't match anything to get a starting corner
    for (let i = 0; i < sides.length; i++) {
        let matches = 0
        let match = []
        for (let j = 1; j < 5; j++) {
            for (let k = 0; k < sides.length; k++) {
                if (k !== i) { // skip self
                    for (let l = 1; l < 5; l++) {
                        if (sides[i][j] == sides[k][l] || sides[i][j] == reverseString(sides[k][l])) {
                            matches++
                            match.push(j)
                        }
                    }
                }
            }
        }
        if (matches < 3) { // 2 sides don't match so it is a corner
            let tile = getTile(sides[i][0])

            // rotate tile to be top left tile (matching sides to bottom right)
            // match // 1: top, 2: bottom, 3: left, 4: right
            let rotationsneeded 
            if (match.includes(1) && match.includes(4)) { 
                rotationsneeded = 3
                nextcolumn = reverseString(sides[i][4])
                next = sides[i][1]
            } else if (match.includes(1) && match.includes(3)) {
                rotationsneeded = 2
                nextcolumn = reverseString(sides[i][3])
                next = reverseString(sides[i][1])
            } else if (match.includes(2) && match.includes(3)) {
                rotationsneeded = 1
                nextcolumn = sides[i][3]
                next = reverseString(sides[i][2])
            } else {
                // match = 2 & 4, already rotated right
                nextcolumn = reverseString(sides[i][3])
                next = reverseString(sides[i][1])
            }

            // rotate
            for (let r = 0; r < rotationsneeded; r++) {
                tile = rotateLeft(tile) 
            }

            pushandremove(tile, i, true, 0)

            break // only need one corner to start
        }
    }

    // // create image 

    // // moet op een betere manier kunnen, maar ik ben al tevreden als het werkt
    // let first = true
    // let begin = 0
    // let firstcolumn = true
    // w: while(sides.length > 0) {
    //     let revnext = reverseString(next)
    //     // find next tile and add it to the image
    //     for (let i = 0; i < sides.length; i++) {
    //         let flag = false
    //         for (let j = 1; j < 5; j++) {
    //             if (firstcolumn) {
    //                 if (sides[i][j] == next && !flag) {
    //                     let tile = getTile(sides[i][0])
    //                     // align tile
    //                     if (j == 1 && matchnothing(sides[i][3], i)) {
    //                         next = sides[i][2]
    //                     } else if (j == 2 && matchnothing(sides[i][4], i)) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][1])
    //                     } else if (j == 3 && matchnothing(sides[i][2], i)) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][4])
    //                     } else if (j == 4 && matchnothing(sides[i][1], i)) {
    //                         tile = rotateLeft(tile)
    //                         next = sides[i][3]
    //                     } else {
    //                         flag = true
    //                         j--
    //                         continue
    //                     }
    //                     pushandremove(tile, i, first, begin)
    //                     begin += tile.length
    //                     continue w
    //                 } else if (sides[i][j] == revnext) {
    //                     let tile = getTile(sides[i][0])
    //                     // align tile
    //                     if (j == 1 && matchnothing(sides[i][4], i)) {
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][2])
    //                     } else if (j == 2 && matchnothing(sides[i][4], i)) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         next = sides[i][1]
    //                     } else if (j == 3 && matchnothing(sides[i][2], i)) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         next = sides[i][4]
    //                     } else if (j == 4 && matchnothing(sides[i][2], i)) {
    //                         tile = rotateLeft(tile)
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][3])
    //                     } else {
    //                         flag = false
    //                         continue
    //                     }
    //                     pushandremove(tile, i, first, begin)
    //                     begin += tile.length
    //                     continue w
    //                 }
    //             } else {
    //                 if (sides[i][j] == next) {
    //                     let tile = getTile(sides[i][0])
    //                     // align tile
    //                     if (j == 1) {
    //                         next = sides[i][2]
    //                     } else if (j == 2) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][1])
    //                     } else if (j == 3) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][4])
    //                     } else if (j == 4) {
    //                         tile = rotateLeft(tile)
    //                         next = sides[i][3]
    //                     }
    //                     pushandremove(tile, i, first, begin)
    //                     begin += tile.length
    //                     continue w
    //                 } else if (sides[i][j] == revnext) {
    //                     let tile = getTile(sides[i][0])
    //                     // align tile
    //                     if (j == 1) {
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][2])
    //                     } else if (j == 2) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         next = sides[i][1]
    //                     } else if (j == 3) {
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         tile = rotateLeft(tile)
    //                         next = sides[i][4]
    //                     } else if (j == 4) {
    //                         tile = rotateLeft(tile)
    //                         tile = flip(tile)
    //                         next = reverseString(sides[i][3])
    //                     }
    //                     pushandremove(tile, i, first, begin)
    //                     begin += tile.length
    //                     continue w
    //                 }
    //             }
    //         }
    //     }
    //     // if next tile not found, its the bottom, so find next column
    //     first = false
    //     begin = 0
    //     next = nextcolumn
    //     revnext = reverseString(next)
    //     firstcolumn = false
    //     for (let i = 0; i < sides.length; i++) {
    //         for (let j = 1; j < 5; j++) {
    //             if (sides[i][j] == next) {
    //                 let tile = getTile(sides[i][0])
    //                 // align tile
    //                 if (j == 1 && matchnothing(sides[i][3], i)) {
    //                     tile = flip(tile)
    //                     tile = rotateLeft(tile)
    //                     nextcolumn = reverseString(sides[i][2])
    //                     next = sides[i][4]
    //                 } else if (j == 2 && matchnothing(sides[i][3], i)) {
    //                     tile = rotateLeft(tile)
    //                     tile = rotateLeft(tile)
    //                     tile = rotateLeft(tile)
    //                     nextcolumn = sides[i][1]
    //                     next = reverseString(sides[i][4])
    //                 } else if (j == 3 && matchnothing(sides[i][1], i)) {
    //                     nextcolumn = sides[i][4]
    //                     next = sides[i][2]
    //                 } else if (j == 4 && matchnothing(sides[i][1], i)) {
    //                     tile = flip(tile)
    //                     nextcolumn = sides[i][3]
    //                     next = reverseString(sides[i][2])
    //                 }
    //                 pushandremove(tile, i, first, begin)
    //                 begin += tile.length
    //                 continue w
    //             } else if (sides[i][j] == revnext) {
    //                 let tile = getTile(sides[i][0])
    //                 // align tile
    //                 if (j == 1 && matchnothing(sides[i][3], i)) {
    //                     tile = rotateLeft(tile)
    //                     nextcolumn = sides[i][2]
    //                     next = reverseString(sides[i][4])
    //                 } else if (j == 2 && matchnothing(sides[i][3], i)) {
    //                     tile = rotateLeft(tile)
    //                     tile = flip(tile)
    //                     nextcolumn = reverseString(sides[i][1])
    //                     next = sides[i][4]
    //                 } else if (j == 3 && matchnothing(sides[i][2], i)) {
    //                     tile = rotateLeft(tile)
    //                     tile = flip(tile)
    //                     tile = rotateLeft(tile)
    //                     tile = rotateLeft(tile)
    //                     tile = rotateLeft(tile)
    //                     nextcolumn = reverseString(sides[i][4])
    //                     next = sides[i][1]
    //                 } else if (j == 4 && matchnothing(sides[i][2], i)) {
    //                     tile = rotateLeft(tile)
    //                     tile = rotateLeft(tile)
    //                     nextcolumn = reverseString(sides[i][3])
    //                     next = reverseString(sides[i][1])
    //                 }
    //                 pushandremove(tile, i, first, begin)
    //                 begin += tile.length
    //                 continue w
    //             }
    //         }
    //     }
    //     // if no next tile and no new column, image should be finished
    //     if (sides.length > 0) {
    //         console.log("Something went wrong while creating the image")
    //         break // no infinite loop while coding
    //     }
    // }


    
    // example
    // image = [".#.#..#.##...#.##..#####", "###....#.#....#..#......", "##.##.###.#.#..######...", "###.#####...#.#####.#..#", "##.#....#.##.####...#.##", "...########.#....#####.#", "....#..#...##..#.#.###..", ".####...#..#.....#......", "#..#.##..#..###.#.##....", "#.####..#.####.#.#.###..", "###.#.#...#.######.#..##", "#.####....##..########.#", "##..##.#...#...#.#.#.#..", "...#..#..#.#.##..###.###", ".#.#....#.##.#...###.##.", "###.#...#..#.##.######..", ".#.#.###.##.##.#..#.##..", ".####.###.#...###.#..#.#", "..#.#..#..#.#.#.####.###", "#..####...#.#.#.###.###.", "#####..#####...###....##", "#.##..#..#...#..####...#", ".#.###..##..##..####.##.", "...###...##...#...#..###"]
    // image = rotateLeft(image)
    
    // note: we only have to search for sea dragons oriented one way, this will not work correct for finding overlapping sea dragons or sea dragons that swim in different directions
    // for () { for every rotation and flip
        showseadragons()
    // }

    // count water roughness (#)
    let total = 0
    for (let i = 0; i < image.length; i++) {
        for (let j = 0; j < image[i].length; j++) {
            if (image[i].substring(j, j+1) == "#") {
                total++
            }
        }
    }
    console.log(total)
}

function reverseString(str) {
    var split = str.split("")
    var reverse = split.reverse()
    return reverse.join("")
}

function getTile(id) {
    let tile = input.filter(item => item[0].substring(5, item[0].length-1) == id) // get tile from input
    let tile2 = shave(tile[0]) // shave off id and sides
    return tile2
}

function shave(tile) { // remove id and shave of the sides from a tile
    let newtile = []
    for (let i = 2; i < tile.length-1; i++) {
        newtile.push(tile[i].substring(1, tile[i].length-1))
    }
    return newtile
}

function rotateLeft(tile) { // rotate tile left / anti clockwise
    let rotated = []
    for (let i = 0; i < tile.length; i++) {
        if(i == 0) {
            for (let j = 0; j < tile[0].length; j++) {
                rotated.push(tile[i].substring(j, j+1))
            }
        } else {
            for (let j = 0; j < tile[i].length; j++) {
                rotated[j] += tile[i].substring(j, j+1)
            }
        }
    }
    return rotated
}

function flip(tile) {
    let flipped = []
    for (let i = 0; i < tile.length; i++) {
        let row = ""
        for (let j = tile[i].length-1; j > 0; j--) {
            row += tile[i].substring(j, j+1)
        }
        flipped.push(row)
    }
    return flipped
}

function pushandremove(tile, i, first, begin) {
    // push tile to image
    if (first) {
        for (let t = 0; t < tile.length; t++) {
            image.push(tile[t])
        }
    } else {
        for (let t = 0; t < tile.length; t++) {
            image[begin + t] += tile[t]
        }
    }
    // sides.splice(i, i+1) // remove from sides, used, so no need to check anymore
    // cant remove, need index to stay the same
    sides[i][0] = ""
    sides[i][1] = ""
    sides[i][2] = ""
    sides[i][3] = ""
    sides[i][4] = ""
}

//                   # 
// #    ##    ##    ###
//  #  #  #  #  #  #   
function showseadragons() {
    // search sea dragons
    for (let i = 1; i < image.length-1; i++) {
        for (let j = 19; j < image[i].length-1; j++) {
            if (image[i].substring(j-19, j-18) == "#"
            && image[i+1].substring(j-18, j-17) == "#"
            && image[i+1].substring(j-15, j-14) == "#"
            && image[i].substring(j-14, j-12) == "##"
            && image[i+1].substring(j-12, j-11) == "#"
            && image[i+1].substring(j-9, j-8) == "#"
            && image[i].substring(j-8, j-6) == "##"
            && image[i+1].substring(j-6, j-5) == "#"
            && image[i+1].substring(j-3, j-2) == "#"
            && image[i].substring(j-2, j+1) == "###"
            && image[i-1].substring(j-1, j) == "#") {
                // change # to O
                image[i] = image[i].substring(0, j-19) + "O" + image[i].substring(j-18)
                image[i+1] = image[i+1].substring(0, j-18) + "O" + image[i+1].substring(j-17)
                image[i+1] = image[i+1].substring(0, j-15) + "O" + image[i+1].substring(j-14)
                image[i] = image[i].substring(0, j-14) + "OO" + image[i].substring(j-12)
                image[i+1] = image[i+1].substring(0, j-12) + "O" + image[i+1].substring(j-11)
                image[i+1] = image[i+1].substring(0, j-9) + "O" + image[i+1].substring(j-8)
                image[i] = image[i].substring(0, j-8) + "OO" + image[i].substring(j-6)
                image[i+1] = image[i+1].substring(0, j-6) + "O" + image[i+1].substring(j-5)
                image[i+1] = image[i+1].substring(0, j-3) + "O" + image[i+1].substring(j-2)
                image[i] = image[i].substring(0, j-2) + "OOO" + image[i].substring(j+1)
                image[i-1] = image[i-1].substring(0, j-1) + "O" + image[i-1].substring(j)
            }
        }
    }
    console.log(image)
}

function matchnothing(side, index) {
    for (let i = 0; i < sides.length; i++) {
        if (i !== index) { // skip self
            for (let j = 1; j < sides[i].length; j++) {
                if (side == sides[i][j] || side == reverseString(sides[i][j])) {
                    return false
                }
            }
        }
    }
    return true
}

start()

// tweede deel: 